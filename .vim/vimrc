let g:plugged_dir_path = expand('$HOME/.vim/plugged')
let g:autoload_plug_path = expand('$HOME/.vim/autoload/plug.vim')

" load plugins
if empty(glob(g:autoload_plug_path))
  silent exec "!curl -fLo ".g:autoload_plug_path." --create-dirs "
    \ ."https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
endif

" check for plugged dir
if empty(glob(g:plugged_dir_path))
  silent exec "!mkdir ".g:plugged_dir_path
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" run PlugInstall if there are missing plugins
autocmd VimEnter * if len(filter(values(g:plugs), '!isdirectory(v:val.dir)'))
  \| PlugInstall --sync | source $MYVIMRC
\| endif

if has('nvim')
  " Nvim python support for virtual envs: https://github.com/deoplete-plugins/deoplete-jedi/wiki/Setting-up-Python-for-Neovim
  let g:python_host_prog = "$HOME/.pyenv/versions/neovim2/bin/python"
  let g:python3_host_prog = "$HOME/.pyenv/versions/neovim3/bin/python"
endif

call plug#begin(g:plugged_dir_path)
  " Colorscheme
  Plug 'joshdick/onedark.vim'
  " Fzf
  Plug 'junegunn/fzf', {'do': {-> fzf#install()}}
  Plug 'junegunn/fzf.vim'
  " Git and github support
  Plug 'tpope/vim-fugitive'
  Plug 'tpope/vim-rhubarb'
  " Text support
  Plug 'tpope/vim-surround'
  Plug 'tpope/vim-commentary'
  Plug 'junegunn/vim-peekaboo'
  " Tmux navigation and control
  Plug 'christoomey/vim-tmux-navigator'
  Plug 'preservim/vimux'
  " DB client
  Plug 'tpope/vim-dadbod'
  Plug 'kristijanhusak/vim-dadbod-ui', {'do': 'git am ../../jump-to-fk-fix.patch'}
  Plug 'kristijanhusak/vim-dadbod-completion'
  " RestAPI client
  Plug 'diepm/vim-rest-console'
  " Test runner
  Plug 'vim-test/vim-test'

  if has('python3')
    " python virtualenvs support
    Plug 'petobens/poet-v'
  endif
  
  if has('nvim')
    " async support
    Plug 'nvim-lua/plenary.nvim'
    " package manager
    Plug 'williamboman/mason.nvim', { 'do': ':MasonUpdate' }
    " lsp
    Plug 'neovim/nvim-lspconfig'
    Plug 'williamboman/mason-lspconfig.nvim'
    " formatter/linter
    Plug 'jose-elias-alvarez/null-ls.nvim'
    " dap
    Plug 'mfussenegger/nvim-dap'
    " completion
    Plug 'echasnovski/mini.completion'
    " treesitter
    Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}
  endif

call plug#end()


" vim configs
runtime! rcfiles/*.vim
" plugin configs
runtime! rcplugins/*.vim

if has('nvim')
  runtime! rcplugins/*.lua
endif
